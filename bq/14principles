S – Situation - background info
T – Task - what you had to do
A – Activity - what you did - this should be the longest part of the answer
R – Results - positive; quantifiable; what you learned; what you would do differently next time

Leadership Principles
We use our Leadership Principles every day, whether we're discussing ideas for new projects or deciding on the best approach to solving a problem. It is just one of the things that makes Amazon peculiar.

1. Customer Obsession（顾客至上，从客户角度出发获取信任，关注竞争者，但是更关心客户）
Leaders start with the customer and work backwards. They work vigorously to earn and keep customer trust. Although leaders pay attention to competitors, they obsess over customers.
- Walk us through a time when you helped a customer through a difficult process
  consistency between online and offline

- Who was your most difficult customer?
  no. data scientist, their requirements is more close to customer, reasonable. in production environment, they are more experienced

- Give me an example of a time when you did not meet a client’s expectation. What happened, and how did you attempt to rectify the situation?
  Never, before the starting, clarify more than once. Sometimes can not meet all expections, list the priority

- When you’re working with a large number of customers, it’s tricky to deliver excellent service to them all. How do you go about prioritizing your customers’ needs?
  Can not satisfy all, but satisfy most of users' requirements
  Pareto principle(80/20 rule) - for many events, about 80% of the effects come from 20% of the causes

- Tell the story of the last time you had to apologize to someone.
  apologize to QA, for unit tests


2. Ownership（目光长远，不为短期结果牺牲长期价值，从不说”那不是我的工作”）
Leaders are owners. They think long term and don’t sacrifice long-term value for short-term results. They act on behalf of the entire company, beyond just their own team. They never say “that’s not my job."
- Tell me about a time when you had to leave a task unfinished.
  re-organization, transfer project, make sure they are totally understand, keep contact

- Tell me about a time when you had to work on a project with unclear responsibilities.
  delta compute, compute once -> continious computation
  totally new, unclear working scope, waiting for each other, befause of poor communication
  developers base in both BJ and SH, propose - daily meeting, 5min

- Tell me a challenge you had where the best way forward was not clear cut. How did you decide what to do?
  Collect information from users
  Propose at least 2 workable solutions, trade off
  According to the real production environment, [time first] or space first?
  prioritize the functions, implement the most important feature first
  Collect feedbacks from users

- Give me an example of something you tried to accomplish/took a risk but failed/Tell me about a time when you took a calculated risk.
  long-term value
  not only support our colleague, but attract more developers anywhere in the world
  we want to make a standard for AI application development workflow
  Last quarter, We planed to attract at least 100 developers to use our system
  But, you know, we have to support our internal delivery team firstly,
  and we don't have enough energy to promote and operate our product
  it is a pity, we hope that we can do it this year

- Give me an example of a time when you showed initiative.
  propose FEDB to deliver teams/data scientist, it works well
  1. let them know our project, promote our project to them, they sopported me a lot
  2. collect requirements and advices from them
  3. let them have a try our project, and try to reduce their workdload and time
  4. It works very well current, success innovation

3. Invent and Simplify（创新的发明，寻找简化方法。从任何地方寻找新的想法。在做新的事情时，可以接受一段时间内存在误解）
Leaders expect and require innovation and invention from their teams and always find ways to simplify. They are externally aware, look for new ideas from everywhere, and are not limited by “not invented here." As we do new things, we accept that we may be misunderstood for long periods of time.
- Tell me about a time when you gave a simple solution to a complex problem.
  1. Intellij -> lombok(annotation), fluent style, simple and clear
  2. zookeeper retry & timeout: easy to make mistakes -> curator
  3. http -> rpc

- Tell me about a time when you invented something/Tell me a time when you created an innovative product/Most challenging project?
  that is exactly my current project, major contributor
  I started my current project one year ago from scratch
  idea from my manager, he worked with deliver team for a long time, and know their requirements
  last 6 months, only one developer(me), recently, aother 2 developers joined
  notice that it is hard for deliver team to deliver a model to customer smoothly
  pyspark - java, cost at least one week for development, with many errors
  We want to develop a system that make model on production without any modification
  we schedule some workshops for sharing our ideas with data scientist and collect opinions from them
  Keep constraints - can not develop a product perfectly at the first version - keep iteration


4. Are Right, A Lot（领导者有更强的判断力和直觉，接受不同的观点）
Leaders are right a lot. They have strong judgment and good instincts. They seek diverse perspectives and work to disconfirm their beliefs.
- tell me about a time when you are wrong
  just want to fix the specific bug asap, no UT
  old bugs appear again and again, biggest mistake I've ever made
  Now I pay more attention to UT, every function shoud have its own ut bofore merge to the main branch
  With complete UT, fix a bug, don't afraid at all. UT give you complete confidence
  
- tell me about a time when you had to work with incomplete data or information
  research project, kaggle dataset, focus on the workflow
  how to make ML workflow more simple for developers
  totally new to it, not too much information about field
  combine my research result with my current project
  don't need to care about the details, just focus on their own business logic


5. Learn and Be Curious（保持学习，提升自己，对新事物好奇，乐于探索）
Leaders are never done learning and always seek to improve themselves. They are curious about new possibilities and act to explore them.
- How do you find the time to stay inspired, acquire new knowledge, innovate in your work?
  logical regression/random forest
  async call, completableFuture(jdk8)
  infoQ, blogs
  redis
  CICD
  leetcode, basic knowledge for every engineers, for high quality/performance code


6. Hire and Develop the Best（善于发现人才，指导他人）
Leaders raise the performance bar with every hire and promotion. They recognize exceptional talent, and willingly move them throughout the organization. Leaders develop leaders and take seriously their role in coaching others. We work on behalf of our people to invent mechanisms for development like Career Choice.
- Tell me about a time when you mentored/coached someone.
  We have one fresh-graduate colleague in our team, I am his mentor
  Firstly, his code is just like demo code, not production.
  workable but variable names are very poor, and no UT for his functions
  code review for every function & recommand some useful plugins for him, lombok
  Now his code looks better

- Sometimes when teammates are not "qualified"/Tell me about a time when you had to deal with a poor performer on your team.
  I don't think anyone is not qualified, just because this task is not suitable for him
  I think it is necessary to make someone familiar with code/workflow firstly, not just coding without understanding the background.
  Everyone has his own strengths and weak points

- Give me an example of a time when you motivated others.
  He doesn't want to try any complex tasks, just does easy task
  I guide him to have a try and give him enough confidence, share knowledge with him

7. Insist on the Highest Standards（坚持最高标准，交付高质量产品）
Leaders have relentlessly high standards — many people may think these standards are unreasonably high. Leaders are continually raising the bar and drive their teams to deliver high quality products, services, and processes. Leaders ensure that defects do not get sent down the line and that problems are fixed so they stay fixed.
- Tell me about a time when you could have stopped working but persisted.
  improve performance
  1. Access zk node -> keep in memory, init form zk, reduce zk access
  2. Two options, sync call&Async call, completableFuture

- Tell me about a time when you couldn’t meet your own expectations on a project.
  no, maybe limited time, demo version, not fully tested
  But release version, have to meet my expectations, keep high standard, deliver stable product

- Tell me about a time when a team member didn’t meet your expectations on a project.
  no, keep in touch, follow his process
  can't not finished is acceptable, re-calculate the workflow
  can't stand anyone told me he cannot finish at the last minute
  for quality - more suitable tasks

8. Think Big（大胆思考，激发成果）
Thinking small is a self-fulfilling prophecy. Leaders create and communicate a bold direction that inspires results. They think differently and look around corners for ways to serve customers.
- Tell me about a time when you proposed a new business.

- Tell me about your proudest professional achievement.
  FEDB, release to real-time prediction without any modification
  simplify the workflow, save a lot of time and resource
  already used in 60% of projects within deliver teams
  I felt a strong sense of success/I am so proud of it
  submit a patent about fedb

- Tell me about a time when you went way beyond the scope of the project and delivered.
  Not limited by customers' requirements, sometimes customers are not clear what they want
  Sometimes the process is complex, but they are already used to this process
  We will give them one more choice and let them know there is another process which is more simple and clear
  try to think from the customers' point of view, and dig into their requirements
  Not just, by boss ask me do with it, But, it is really useful so I would like to use it

9. Bias for Action（速度至关重要，决定和行动有时可逆，做好风险评估）
Speed matters in business. Many decisions and actions are reversible and do not need extensive study. We value calculated risk taking.
- Describe how you would handle a busy situation where three people are waiting for help from you.
  list the priority, calcutate risk in advance, try to minimize the risk
  If someone is waiting for me, I'll do it first, try not to block others work

- Describe a time when you saw some problem and took the initiative to correct it rather than waiting for someone else to do it.
  write to my todo list
  don't think just start doing by myslef is a good choice, maybe it is by design
  should discuss first, if really necessary and I’d like to fix this problem
  if time limited, try the simplest workable solution first, modify the origin code as less as possible
  maybe not perfect, should keep iterating and make it more complete
  impossible to develop a perfect product at first


- Tell me about a time you needed to get information from someone who wasn’t very responsive. What did you do?
  prepare enough by myself before, do not ask stupid questions
  don't just wait for his response, schedule a concentrated time, half an hour, for asking questions


10. Frugality（争取事半功倍）
Accomplish more with less. Constraints breed resourcefulness, self-sufficiency, and invention. There are no extra points for growing headcount, budget size, or fixed expense.
- Tell me about a time where you thought of a clever new way to save money for the company.
  fedb, online-offline consistency

- Tell me about a time when you had to work with limited time or resources.
  list the priority
  pareto principle

- Tell me about a time when you delegated a project effectively.高效上线项目
  todo list
  communication is very important
  review process everyday
  finish as planed, no delay, no major bugs

11. Earn Trust（获取信任，乐于倾听，尊重他人，多从自身找原因）
Leaders listen attentively, speak candidly, and treat others respectfully. They are vocally self-critical, even when doing so is awkward or embarrassing. Leaders do not believe their or their team’s body odor smells of perfume. They benchmark themselves and their teams against the best.
- Tell me a time when you earned trust of a group.
  joined this team firstly, we don't know each others background
  propose monthly knowledge sharing workshop, know others technical background soon, earn trust from each other

12. Dive Deep（关注细节，及时review，及早发现）
Leaders operate at all levels, stay connected to the details, audit frequently, and are skeptical when metrics and anecdote differ. No task is beneath them.
- Tell me about a time when you had to dive deep into the data and the results you achieved.
  parquet reader, column based storage
  not very popular, not much tutorials about this
  read source code and collect info from stackoverflow

- A time working on a project and the results exceeded the goals/Give me two examples of when you did more than what was required in any job experience.
  Current project, from scratch, just an innovation
  innovation project, 50 percent chance to fail. But luckily, we succeed/səkˈsiːd/
  Help our data scientist and deliver team -> reduce time to deliver
  use same code(SQL) for batch-compute and realtime-compute


13. Have Backbone; Disagree and Commit（敢于挑战权威，敢于对自己的决策负责）
Leaders are obligated to respectfully challenge decisions when they disagree, even when doing so is uncomfortable or exhausting. Leaders have conviction and are tenacious. They do not compromise for the sake of social cohesion. Once a decision is determined, they commit wholly.
- Tell me about the most difficult interaction互动 you had at work./Tell me about a time when you did not accept the status quo现状.
  previous work, after reorganization, colleagues don't accept new technologies
  I try to share latest knowledge with them but it seems they are not interested
  I discuss my ideas with my manager, he support me a lot
  We can use popular technologies in new project(jboss - spring-boot)

- Tell me about a time when you had to step up and disagree with a team members approach.
  alway use old technologies they familar with
  don't like to learn and accept new technologies

- If your direct manager was instructing you to do something you disagreed with, how would you handle it?
  Although most of time he is correct
  I will discuss with him firstly before I staring to do
  Normally both of us are correct, Just because we have different points of view
  It is normal that people have disagreements
  the most important thing is listen carefully to his opinions and share my opinions with him
  Because our goals are the same, and I am sure we will reach an agreement on at least one point
  We should start from this point and try to reach the final agreement

- A piece of critical批评 feedback I received from the others
  Actually no
  But not satisfied with my self, sometime hard to say no, should improve

14. Deliver Results（按时交付高质量产品，遇到挫折挺身而出，对产品有追求，不满足于现状）
Leaders focus on the key inputs for their business and deliver them with the right quality and in a timely fashion. Despite setbacks, they rise to the occasion and never settle.
- Tell me about a time where you overcame an obstacle and delivered results./Obstacles met during a project
  parquet, totally new to it, information limited, not much information from internet
  more time to research in advance, read source code
  connect blog author via email, ask questions, communication is inefficient
  finally, using parquet in our project succeed, improve performace

- What is the most difficult situation you have ever faced in your life? How did you handle it?
  to be honest, I don't have real difficult situation in my life, but confused situation
  before my graduation 4 years ago. Not sure working in paris or BJ
  technologies in china developed very fast
  I'd like to learn more and improve myself when I was young, so started first job in china
  But now, already 4 years, try sth challenging and new
  I am curious about the working atmosphere in great global companies, like amazon
  so today I am here

- By providing an example, tell me when you have had to handle a variety of assignments任务. Describe the results.
  list priority
  pareto principle
  do not block others
  finish one by one

- Couldn’t finish tasks before deadline?
  Never happened in recent years
  When I did my internship 4 years ago. Can not estimate workload very well
  I was blocked, feel afraid to ask someone for help, even didn't tell my boss
  When I didn't finish my task in deadline, I realized that this is not correct
  Now, daily work plan and todo list
  This situation will never happen again
